import{_ as t,c as a,d as r,o as n}from"./app-CMefaCmO.js";const i={};function o(s,e){return n(),a("div",null,e[0]||(e[0]=[r('<h1 id="inspireface-architecture" tabindex="-1"><a class="header-anchor" href="#inspireface-architecture"><span>InspireFace Architecture</span></a></h1><p>InspireFace SDK adopts a layered modular architecture design that provides high-performance face recognition capabilities across diverse hardware platforms. The system is structured into five main layers: Client Interface, Session Management, Core Services, Engine Layer, and Platform Support.</p><p><img src="https://inspireface-1259028827.cos.ap-singapore.myqcloud.com/docs%2Fmem_model.drawio.png" alt=""></p><p>At the top level, the <strong>Client Interface Layer</strong> provides a unified C API that abstracts complex implementations, allowing developers to easily integrate face detection, recognition, and liveness detection functionalities. The <strong>Session Management Layer</strong> serves as the core processing unit, supporting multiple concurrent Session instances with independent configurations and resource isolation, alongside comprehensive image codec and processing capabilities for various formats (RGB, BGR, YUV).</p><p>The <strong>Core Services Layer</strong> encompasses two global services: App Context for SDK lifecycle and resource management, and Feature Hub for centralized face feature vector storage, search, and comparison with support for both memory and persistent storage modes.</p><p>The <strong>Engine Layer</strong> represents the performance cornerstone, featuring a <strong>multi-backend heterogeneous neural network inference architecture</strong> that intelligently selects optimal backends including ONNX Runtime, TensorRT, CoreML, and MNN based on available hardware resources.</p><p>The <strong>Hardware Support Layer</strong> provides comprehensive acceleration across multiple platforms. <strong>GPU acceleration</strong> includes full CUDA support for NVIDIA hardware with Tensor Core optimization, OpenCL compatibility for AMD devices, and native Metal framework support for Apple platforms. <strong>Embedded NPU support</strong> encompasses ARM Mali NPU, Rockchip NPU, and Apple NPU Engine(<strong>ANE</strong>) architectures. <strong>CPU optimization</strong> leverages ARM NEON SIMD instructions, Intel AVX/SSE extensions, and OpenMP-based multi-threading. Additionally, <strong>2D image processing acceleration</strong> utilizes hardware engines like ARM Mali GPU, Rockchip RGA for efficient format conversion, scaling, and geometric transformations with DMA-optimized zero-copy memory management.</p><p>This architecture ensures optimal performance through intelligent hardware detection and resource scheduling while maintaining cross-platform compatibility and easy integration across Linux, Windows, Android, and iOS environments.</p>',8)]))}const m=t(i,[["render",o]]),p=JSON.parse('{"path":"/guides/arch.html","title":"InspireFace Architecture","lang":"en-US","frontmatter":{},"headers":[],"git":{"updatedTime":1748231027000,"contributors":[{"name":"tunm","username":"tunm","email":"tunmxy@163.com","commits":2,"url":"https://github.com/tunm"},{"name":"Jingyu","username":"Jingyu","email":"tunmxy@163.com","commits":1,"url":"https://github.com/Jingyu"}],"changelog":[{"hash":"3586c1b54db6aa4c817cdeae464697f08debca38","time":1748231027000,"email":"tunmxy@163.com","author":"tunm","message":"Add archive diagram"},{"hash":"7cecca5fb639f6cdc982858f83a0ae62efcb32e2","time":1744203234000,"email":"tunmxy@163.com","author":"Jingyu","message":"Update"},{"hash":"b1bdfb0435ebc29849c32dd85a92e67161a23726","time":1744160796000,"email":"tunmxy@163.com","author":"tunm","message":"Update"}]},"filePathRelative":"guides/arch.md"}');export{m as comp,p as data};
