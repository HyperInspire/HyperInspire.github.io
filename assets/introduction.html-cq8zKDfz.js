import{_ as n,c as a,d as s,o as t}from"./app-BnfJPSVp.js";const i={};function o(r,e){return t(),a("div",null,e[0]||(e[0]=[s(`<h1 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction"><span>Introduction</span></a></h1><p><strong>InspireFace</strong> is a powerful, cross-platform face recognition SDK written in C/C++ that enables high-performance facial analysis across a wide range of hardware platforms. Designed for real-world deployment in mobile, embedded, and server-side environments, InspireFace provides a full pipeline for facial processing, from detection to recognition, with support for advanced features such as liveness detection, mask detection, facial attributes, and more.</p><hr><p><img src="https://tunm-resource.oss-cn-hongkong.aliyuncs.com/docs/banner-side (2).png" alt="alt text"></p><h2 id="core-features" tabindex="-1"><a class="header-anchor" href="#core-features"><span>Core Features</span></a></h2><ul><li><strong>Face Detection</strong> â€” Fast and accurate face localization in images and video streams.</li><li><strong>Facial Landmarks</strong> â€” High-precision alignment for downstream tasks.</li><li><strong>Face Embeddings &amp; Recognition</strong> â€” Compact feature extraction and identity comparison.</li><li><strong>Face Tracking</strong> â€” Smooth tracking of faces across video frames.</li><li><strong>Mask Detection &amp; Liveness Check</strong> â€” Identify whether a face is masked or spoofed.</li><li><strong>Pose Estimation</strong> â€” Euler angle (roll, pitch, yaw) calculation for each face.</li><li><strong>Face Attribute Analysis</strong> â€” Age, gender, and expression inference.</li><li><strong>Expression &amp; Action Detection</strong> â€” Blink, nod, and head-shake detection for interactive apps.</li><li><strong>Quality Assessment</strong> â€” Image quality metrics to ensure robust inference.</li></ul><p><img src="https://tunm-resource.oss-cn-hongkong.aliyuncs.com/blogs_box/o-10.gif" width="200" height="200"> <img src="https://tunm-resource.oss-cn-hongkong.aliyuncs.com/docs/o-4.gif" width="200" height="200"> <img src="https://tunm-resource.oss-cn-hongkong.aliyuncs.com/docs/out-8.gif" width="200" height="200"></p><hr><h2 id="flexible-deployment" tabindex="-1"><a class="header-anchor" href="#flexible-deployment"><span>Flexible Deployment</span></a></h2><p>InspireFace supports deployment across a broad set of hardware and platforms:</p><ul><li><strong>CPUs</strong>: x86, ARM</li><li><strong>GPUs</strong>: NVIDIA CUDA &amp; TensorRT</li><li><strong>NPUs</strong>: Rockchip NPUs (RV1109, RV1106, RK356x, RK3588)</li><li><strong>ANE</strong>: Apple Neural Engine (CoreML on macOS/iOS)</li><li><strong>Platforms</strong>: Linux, macOS, iOS, Android</li></ul><hr><h2 id="ready-to-use-sdks" tabindex="-1"><a class="header-anchor" href="#ready-to-use-sdks"><span>Ready-to-Use SDKs</span></a></h2><ul><li>Python package via PyPI: <code>pip install inspireface</code></li><li>Android SDK via JitPack</li><li>Precompiled C/C++ libraries</li><li>Docker-based multi-platform builds</li><li>React Native module via JSI/Nitro Modules</li></ul><hr><h2 id="performance" tabindex="-1"><a class="header-anchor" href="#performance"><span>Performance</span></a></h2><p>On Apple devices using ANE (e.g., iPhone 13), the full pipeline of <strong>Face Detection + Alignment + Feature Extraction</strong> completes in <strong>&lt;2ms</strong>, making InspireFace ideal for real-time applications.</p><hr><h2 id="easy-integration" tabindex="-1"><a class="header-anchor" href="#easy-integration"><span>Easy Integration</span></a></h2><p>InspireFace is developer-friendly with bindings for:</p><ul><li>âœ… C/C++ (CAPI and C++ header interface)</li><li>âœ… Python (ctypes interface and examples)</li><li>âœ… Java / Android (JNI bindings)</li><li>âœ… React Native (via <code>react-native-nitro-inspire-face</code>)</li></ul><h3 id="quick-python-example" tabindex="-1"><a class="header-anchor" href="#quick-python-example"><span>Quick Python Example:</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> cv2</span>
<span class="line"><span class="token keyword">import</span> inspireface <span class="token keyword">as</span> isf</span>
<span class="line"></span>
<span class="line">session <span class="token operator">=</span> isf<span class="token punctuation">.</span>InspireFaceSession<span class="token punctuation">(</span>isf<span class="token punctuation">.</span>HF_ENABLE_NONE<span class="token punctuation">,</span> isf<span class="token punctuation">.</span>HF_DETECT_MODE_ALWAYS_DETECT<span class="token punctuation">)</span></span>
<span class="line">image <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&quot;face.jpg&quot;</span><span class="token punctuation">)</span></span>
<span class="line">faces <span class="token operator">=</span> session<span class="token punctuation">.</span>face_detection<span class="token punctuation">(</span>image<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Detected </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">len</span><span class="token punctuation">(</span>faces<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string"> faces&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="commercial-support" tabindex="-1"><a class="header-anchor" href="#commercial-support"><span>Commercial Support</span></a></h2><p>Need help integrating InspireFace into your product? Looking for high-accuracy models or custom deployment support?</p><p>ðŸ“§ Contact: <a href="mailto:contact@insightface.ai?subject=InspireFace" target="_blank" rel="noopener noreferrer">contact@insightface.ai</a></p>`,26)]))}const c=n(i,[["render",o]]),p=JSON.parse('{"path":"/introduction.html","title":"Introduction","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Core Features","slug":"core-features","link":"#core-features","children":[]},{"level":2,"title":"Flexible Deployment","slug":"flexible-deployment","link":"#flexible-deployment","children":[]},{"level":2,"title":"Ready-to-Use SDKs","slug":"ready-to-use-sdks","link":"#ready-to-use-sdks","children":[]},{"level":2,"title":"Performance","slug":"performance","link":"#performance","children":[]},{"level":2,"title":"Easy Integration","slug":"easy-integration","link":"#easy-integration","children":[{"level":3,"title":"Quick Python Example:","slug":"quick-python-example","link":"#quick-python-example","children":[]}]},{"level":2,"title":"Commercial Support","slug":"commercial-support","link":"#commercial-support","children":[]}],"git":{"updatedTime":1744203234000,"contributors":[{"name":"tunm","username":"tunm","email":"tunmxy@163.com","commits":2,"url":"https://github.com/tunm"},{"name":"Jingyu","username":"Jingyu","email":"tunmxy@163.com","commits":1,"url":"https://github.com/Jingyu"}],"changelog":[{"hash":"7cecca5fb639f6cdc982858f83a0ae62efcb32e2","time":1744203234000,"email":"tunmxy@163.com","author":"Jingyu","message":"Update"},{"hash":"36283da830e3e7efee25add2666d4a49dae22fa8","time":1744178190000,"email":"tunmxy@163.com","author":"tunm","message":"Update"},{"hash":"b1bdfb0435ebc29849c32dd85a92e67161a23726","time":1744160796000,"email":"tunmxy@163.com","author":"tunm","message":"Update"}]},"filePathRelative":"introduction.md"}');export{c as comp,p as data};
